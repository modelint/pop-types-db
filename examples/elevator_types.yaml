# Here we specify the types we need for a modeled domain


Domain Types:  # Domain specific types (only of use in a particular modeled domain)

  Level Name:  # Floor level name like Mezzanine, 1, 2, Lobby, L, etc
    components:
      - from: String
        regex: '^[A-Za-z0-9][A-Za-z0-9]{0,25}$'   # Allows 25 alphanumeric characters, uper or lower case, no spaces

  Distance:  # Vertical distance in an elevator Shaft
    components:
      - from: Rational
        units: m   # Meters
        range:
          - "[0.0, max]"

  Building Name:  # Name of the Building, ex: "Pigsly Plaza"
    components:
      - from: Name  # This is an inherited utility type

  Bank Name:  # Name of the elevator Bank, ex: "Penthouse Express"
    components:
      - from: Name

  Speed:  # The elevator Cabin speed, for example
    components:
      - from: Rational  # No min or max specified
        units: m/s  # Meters per second

  Duration:  # Time
    components:
      - from: Rational
        units: s  # seconds
        range:
          - "[0.0, max]"

  Direction:  # Up or down, using Boolean so we can take advantage of toggle
    components:
      - from: Boolean
        symbols: [up, down]  # true, false mapping

Utility Types:  # These types are commonly useful across multiple domains without any domain specific meaning

  Name:  # For general descriptive naming purposes
    components:
      - from: String
        regex: '^[A-Za-z0-9][A-Za-z0-9 ]{0,49}$'  # Begin with alphanumeric char, then spaces allowed up to 50 char

  Counter:  # For counting things
    components:
      - from: Integer
        range:
          - "[0, max]"
    operators:
      add:
        - increment
        - decrement
        - reset  # Sets the counter value back to zero

Base Types:  # These types are implemented domains on a wide variety of platforms, no inheritance can be specified

  String:
    platforms:
      tclral: string
      python: str

  Integer:
    platforms:
      tclral: int
      python: int

  Boolean:
    platforms:
      tclral: boolean
      python: bool
    operators:
      - set
      - unset

  Rational:
    platforms:
      tclral: double
      python: float

  Symbolic:
    platforms:
      tclral: string
      python: enum